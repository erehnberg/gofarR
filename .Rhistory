document()
devtools::document()
devtools::document()
document()
devtools::document()
getRversion()
setup_peloton_data <- function(display_name = leaderboard_name) {
workout_data_interface <<- read.csv(paste0(display_name,"_workouts.csv"))
cycling_classes <<- workout_data_interface %>%
filter(Fitness.Discipline == "Cycling")%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
}
setup_peloton_data("pizza2watts")
getwd()
setup_peloton_data("pizza2watts")
library(dplyr)
setup_peloton_data("pizza2watts")
View(cycling_classes)
getwd()
setup_peloton_data <- function(display_name = leaderboard_name) {
workout_data_interface <<- read.csv(paste0(display_name,"_workouts.csv"))
}
setup_peloton_data <- function(display_name = leaderboard_name) {
workout_data_interface <<- read.csv(paste0(display_name,"_workouts.csv"))
}
setup_peloton_data("pizza2watts")
data <- workout_data_interface
str(data)
colnames(data)
type <- "EDM"
data <- filter(data, grep(paste0("*",type,"*")))
?grepl
data <- filter(data, grepl(paste0("*",type,"*"), Title))
ata <- filter(data, grepl(paste0("*",type,"*"), data$Title))
ata
data1 <- data%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
library(dplyr)
data1 <- data%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
data2 <- data <- filter(data, grepl(paste0("*",type,"*"), data$Title))
data2
top_instructor <- function(discipline = "All") {
if (discipline == "All") {
filt_by_disc <- workout_data_interface%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
}
else {
filt_by_disc <- workout_data_interface%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))%>%
filter(Fitness.Discipline == discipline)
}
dis_class_by_inst <- filt_by_disc$Instructor.Name%>%
table()%>%
data.frame()
rank_inst <- dis_class_by_inst[rev(order(dis_class_by_inst$Freq)),]
top_inst <- head(rank_inst,1)
colnames(top_inst) <- c("Top Instructor", "Number of Classes Taken")
print(top_inst, row.names = FALSE)
}
top_instructor()
top_instructor("Cycling")
top_instructor("Yoga")
top_instructor("Medidation")
top_instructor("Mediation")
top_instructor("Meditation")
data2
plot(data2$Length..minutes., data2$Total.Output)
plot(data1$Length..minutes., data1$Total.Output)
plot(data1$Length..minutes., data1$Avg..Watts)
plot(data2$Length..minutes., data2$Avg..Watts)
document()
devtools::document()
devtools::document()
?filter
?filter_
devtools::document()
devtools::document()
?devtools
?roxygen2
vignette("roxygen2", package = "roxygen2")
?devtools
cycling_summary <- function(data = workout_data_interface, type = "All", min_time = 11, min_output = 50) {
# Selects only cycling rides which conform to min_time and min_output
data <- data%>%
filter(Fitness.Discipline == "Cycling")%>%
filter(Length..minutes. >= min_time)%>%
filter(Total.Output >= min_output)
# Selects only rides corresponding to type, using a regular expression to find relevant rides
if (type !="All") {
if (type == "Class") {
data <- data%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
}
else {
data <- filter(data, grepl(paste0("*",type,"*"), data$Title))
}
}
else data
}
top_instructor <- function(discipline = "All") {
if (discipline == "All") {
filt_by_disc <- workout_data_interface%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
}
else {
filt_by_disc <- workout_data_interface%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))%>%
filter(Fitness.Discipline == discipline)
}
dis_class_by_inst <- filt_by_disc$Instructor.Name%>%
table()%>%
data.frame()
rank_inst <- dis_class_by_inst[rev(order(dis_class_by_inst$Freq)),]
top_inst <- head(rank_inst,1)
colnames(top_inst) <- c("Top Instructor", "Number of Classes Taken")
print(top_inst, row.names = FALSE)
}
#'
setup_peloton_data <- function(display_name = leaderboard_name) {
workout_data_interface <<- read.csv(paste0(display_name,"_workouts.csv"))
}
getwd()
setup_peloton_data("pizza2watts")
top_instructor()
library(dplyr)
top_instructor()
cycling_summary()
cycling_summary("Just")
cycling_summary()
cycling_summary(type = "Just")
cycling_summary <- function(data = workout_data_interface, type = "All", min_time = 11, min_output = 50) {
# Selects only cycling rides which conform to min_time and min_output
data <- data%>%
filter(Fitness.Discipline == "Cycling")%>%
filter(Length..minutes. >= min_time)%>%
filter(Total.Output >= min_output)
# Selects only rides corresponding to type, using a regular expression to find relevant rides
if (type !="All") {
if (type == "Class") {
data <- data%>%
filter(!grepl("*Just Ride", Title) & !grepl("*Scenic*", Title))
}
else {
data <- filter(data, grepl(paste0("*",type,"*"), data$Title))
}
}
else data
data
}
cycling_summary(min_time = 81)
cycling_summary(min_output = 81)
